package chapter27.imagefilterdemo;

/**
 * Этот класс демонстрирует фильтр Sharpen.
 * Для фильтрации изображения он создает массив пикселей,
 * вычисляет среднее значение окружающего цвета вокруг
 * каждого пикселя в области 3х3 не считая центральный пиксель.
 * Определяется разность значения центрального пикселя и вычесленного среднего значения
 * окружающих пикселей,затем эта разность складывается со значением центрального пикселя.
 * Вычиленное значение сохраняется в новый массив и отдается обратно.
 * В итоге если пиксель оказывается ярче чем окружение на 30 единиц, то он становится ещё ярче,
 * если же тесмнее на 10 единиц, становится ещё темнее.
 * Резкие детали изображения становятся ещё более резкими, а плавные участки остаются бз изменения.
 *
 * @author Ломовской К.Ю.
 * @since 09.03.2020
 */
public class Sharpen extends Convolver {

    private final int clamp(int c){
        return (c > 255 ? 255 : (Math.max(c, 0)));
    }

    @Override
    void convolve() {
        int r0 = 0, g0 = 0, b0 = 0;

        for (int y = 1; y < height - 1; y++){
            for (int x = 1; x < width - 1; x++){
                int rs = 0;
                int gs = 0;
                int bs = 0;

                for (int k =-1; k <= 1; k++){
                    for (int j =-1; j <= 1; j++){
                        int rgb = imgPixels[(y + k) * width + x + j];
                        int r = (rgb >> 16) & 0Xff;
                        int g = (rgb >> 8) & 0Xff;
                        int b = rgb & 0Xff;
                        if (j == 0 && k == 0){
                            r0 += r;
                            g0 += g;
                            b0 += b;
                        } else {
                            rs += r;
                            gs += g;
                            bs += b;
                        }
                    }
                }
                rs >>= 3;
                gs >>= 3;
                bs >>= 3;

                newImgPixels[y * width + x] = (0xff000000 | clamp(r0 + r0 - rs) << 16
                        | clamp(g0 + g0 - gs) << 8 | clamp(b0 + b0 - bs));
            }
        }
    }
}
